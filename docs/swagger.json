{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Water track",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Application for monitoring water consumption"
  },
  "servers": [
    {
      "url": "http://localhost:3002"
    },
    {
      "url": "https://warettrack.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Operations about Authentication."
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Register user",
        "operationId": "registerUser",
        "description": "Register a new user in the system",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com",
                    "description": "User's email address"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "securePassword123",
                    "description": "User's password"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "en",
                      "de",
                      "ua"
                    ],
                    "example": "en",
                    "description": "User's preferred language"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "User registered successfully!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "email",
                        "gender",
                        "currentDailyNorm",
                        "languages",
                        "displayName"
                      ],
                      "properties": {
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "john@example.com",
                          "description": "User's email address"
                        },
                        "displayName": {
                          "type": "string",
                          "example": "Hello, John",
                          "description": "Optional user's name"
                        },
                        "gender": {
                          "type": "string",
                          "enum": [
                            "woman",
                            "man"
                          ],
                          "default": "woman",
                          "example": "woman",
                          "description": "User's gender"
                        },
                        "currentDailyNorm": {
                          "type": "integer",
                          "minimum": 50,
                          "maximum": 5000,
                          "example": 1500,
                          "description": "Daily water intake norm in milliliters"
                        },
                        "language": {
                          "type": "string",
                          "enum": [
                            "en",
                            "de",
                            "ua"
                          ],
                          "example": "en",
                          "description": "User's preferred language"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login a new user in the system",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com",
                    "description": "User's email address"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "securePassword123",
                    "description": "User's password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logged in successfully!",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Logged in successfully!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "name",
                        "email",
                        "avatarUrl",
                        "gender",
                        "weight",
                        "activeTime",
                        "currentDailyNorm",
                        "languages",
                        "createdAt",
                        "updatedAt",
                        "displayName",
                        "id"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "",
                          "description": "User's name (optional, can be empty)"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "john@example.com",
                          "description": "User's email address"
                        },
                        "avatarUrl": {
                          "type": "string",
                          "format": "binary",
                          "example": null,
                          "description": "URL for the user's avatar or `null` if not set"
                        },
                        "gender": {
                          "type": "string",
                          "enum": [
                            "woman",
                            "man"
                          ],
                          "example": "man",
                          "description": "User's gender"
                        },
                        "weight": {
                          "type": "integer",
                          "example": 50,
                          "description": "User's weight in kilograms"
                        },
                        "activeTime": {
                          "type": "integer",
                          "example": 1,
                          "description": "User's active time in minutes"
                        },
                        "currentDailyNorm": {
                          "type": "integer",
                          "minimum": 50,
                          "maximum": 5000,
                          "example": 1500,
                          "description": "Daily water intake norm in milliliters"
                        },
                        "languages": {
                          "type": "string",
                          "enum": [
                            "en",
                            "de",
                            "ua"
                          ],
                          "example": "en",
                          "description": "User's preferred language"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-11-28T21:41:06.133Z",
                          "description": "Timestamp of when the user was created"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-11-28T21:41:06.133Z",
                          "description": "Timestamp of when the user was last updated"
                        },
                        "displayName": {
                          "type": "string",
                          "example": "Hello, John",
                          "description": "Display name generated based on user's email or name"
                        },
                        "id": {
                          "type": "string",
                          "example": "6748e37270203f0d34a819b1",
                          "description": "User's unique identifier"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "401": {
        "description": "Invalid credentials",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Invalid credentials"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token not provided"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Email already in use",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "Email already in use"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                }
              }
            }
          }
        }
      }
    }
  }
}